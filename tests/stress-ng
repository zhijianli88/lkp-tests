#!/bin/sh
# - testtime
# - class
# - nr_threads

mount_dev()
{
	local mnt=/mnt/stress-ng
	log_cmd mkdir -p $mnt
	log_cmd mount $partition $mnt 2>/dev/null
	cd $mnt
}

## some options are universal, put them in universal_setting
set_for_universal()
{
	[ $nr_partitions -ge 1 ] || exit
	partition=${partitions%% *}
	[ -n "$testtime" ] || testtime=1

	default_option="
		--timeout $testtime \
		--times \
		--verify \
		--metrics-brief
	"

	## stressors spawn exec can't run as root
	## all classes need to exclud them except class exec_spawn
	default_exclude="spawn,exec"
}

# some class need special settinf
set_for_class()
{
	case "$class" in
	"memory")
		stress_opts="--minimize"
		exclude_stress=",stack"
		;;
	"os")
		stress_opts="--minimize"
		;;
	"filesystem")
		mount_dev
		;;
	*)
		;;
	esac
}

run_test()
{
	## most stressors could run as root except exec and spawn,
	## classify exec and spawn into exec_spawn, run it as lkp.
	## run other stress-ng as root
	## use option --exclude to ignore spawn and exec.
	[ "$class" = "exec_spawn" ] && {
		su lkp -c "stress-ng --exec $nr_threads --spawn $nr_threads --timeout $testtime --times --verify --metrics-brief 2>&1"
		return
	}

	log_cmd stress-ng \
		$default_option \
		--sequential $nr_threads \
		--class $class $stress_opts \
		--exclude $default_exclude$exclude_stress 2>&1
}

set_for_universal
set_for_class
run_test
exit_value=$?

exit $exit_value
