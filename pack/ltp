#!/bin/bash

. $LKP_SRC/lib/tests/ltp.sh

download()
{
	[ "$distro" = "debian" ] && {
		git_clone_update https://git.centos.org/r/rpms/rusers.git || return
	}
	git_clone_update https://github.com/PeterHuewe/tpm-emulator.git || return
	git_clone_update https://github.com/numactl/numactl.git || return
	git_clone_update https://github.com/linux-test-project/ltp.git
}

build_rusers()
{
	local branch=$(git branch -a | grep /c | tail -1 | awk -F/ '{print $NF}')
	git checkout "$branch" || return

	RUSERS_VERSION=$(grep ^Version: SPECS/rusers.spec | awk '{print $2}')

	local source=$(grep ^Source: SPECS/rusers.spec | awk '{print $2}')
	local url=$(echo $source | sed s/"%{version}"/${RUSERS_VERSION}/g)
	curl -k "$url" -o netkit-rusers.tar.gz

	tar zxf netkit-rusers.tar.gz

	for p in $(grep ^Patch SPECS/rusers.spec | awk '{print $2}')
	do
		echo "Patching $p ..."
		patch -f -p0 < SOURCES/$p
	done

	cd netkit-rusers-$RUSERS_VERSION
	./configure --prefix=$BM_ROOT/netkit-rusers
	cd rup
	make || return
	cd ../../
}

build_tpm_emulator()
{
	# the lastest tpm-emulator is currupted so use old one
	git reset --hard 0f4579e
	# remove Werror to use gcc-7
	sed -i "s/-Werror//g" CMakeLists.txt
	# don't build kernel module
	sed -i "s/add_subdirectory(tpmd_dev)/#add_subdirectory(tpmd_dev)/g" CMakeLists.txt
	mkdir build && cd build
	cmake ..
	make || return
	make install || return
	make package || return
	cd ..
}

build_numactl()
{
	autoreconf -f -i
	./configure --prefix=$BM_ROOT/testcases/bin/numactl
	make
}

install_rusers()
{
	mkdir -p $BM_ROOT/netkit-rusers/{bin,man/man1}
	cd netkit-rusers-$RUSERS_VERSION/rup
	make install 2> /dev/null
}

install_tpm_emulator()
{
	mkdir -p $BM_ROOT/tpm-emulater
	cp build/*.zip $BM_ROOT/tpm-emulater
}

install_numactl()
{
	make install
	ln -sf $BM_ROOT/testcases/bin/numactl/bin/numademo $BM_ROOT/testcases/bin/numademo
	ln -sf $BM_ROOT/testcases/bin/numactl/bin/memhog $BM_ROOT/testcases/bin/memhog
}

build()
{
	build_ltp $BM_ROOT || exit

	cd ../tpm-emulator || exit
	build_tpm_emulator || exit

	cd ../numactl || exit
	build_numactl || exit

	[ "$distro" = "debian" ] && {
		cd ../rusers || exit
		build_rusers || exit
	}
	return 0
}

install()
{
	cd ../ltp || exit
	install_ltp $BM_ROOT || exit

	cd ../tpm-emulator || exit
	install_tpm_emulator || exit

	cd ../numactl || exit
	install_numactl || exit

	[ "$distro" = "debian" ] && {
		cd ../rusers || exit
		install_rusers || exit
	}
	return 0
}

strip_object_files()
{
	:
}
