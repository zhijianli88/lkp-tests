#!/bin/bash

download()
{
	git_clone_update https://github.com/pmem/valgrind.git --branch pmem-3.12 || return
	git_clone_update https://github.com/llvm-mirror/llvm.git --branch release_39 --depth 1 || return
	git_clone_update https://github.com/llvm-mirror/libcxxabi.git --branch release_39 --depth 1 || return
	git_clone_update https://github.com/pmem/libcxx.git --branch release_39_pmem --depth 1 || return
	git_clone_update https://github.com/pmem/ndctl --branch pending || return
	git_clone_update https://github.com/ofiwg/libfabric.git --branch v1.4.x || return
	git_clone_update https://github.com/pmem/nvml.git || return
}

build_install_valgrind_pmem()
{
	cd ../valgrind || return
	git submodule init || return
	git submodule update || return

	./autogen.sh || return
	./configure --prefix=/usr/local || return
	make || return
	make install || return

	# install to another directory so that we can pack them easily
	./configure --prefix=$BUILD_DIR/valgrind_install/usr/local || return
	make || return
	make install || return
}

build_install_libfabric()
{
	cd $BUILD_DIR/libfabric || return
	./autogen.sh || return
	./configure --prefix=/usr/local --with-valgrind=/usr/local || return
	make || return
	make install || return

	# install to another directory so that we can pack them easily
	./configure --prefix=$BUILD_DIR/valgrind_install/usr/local --with-valgrind=/usr/local || return
	make || return
	make install || return
}

# The c++ subtest needs a custom version of the standard library -- libc++.
# please visit https://github.com/pmem/nvml/blob/master/utils/docker/images/install-libcxx.sh
# to get more detail info.
build_install_libcxx()
{
	export CC=clang
	export CXX=clang++
	local install_path=/usr/local/libcxx

	CMAKE=cmake
	[ "$distro" = "centos" ] && CMAKE=cmake3

	cp -af $BUILD_DIR/libcxxabi $BUILD_DIR/llvm/projects
	cp -af $BUILD_DIR/libcxx $BUILD_DIR/llvm/projects

	mkdir -p $BUILD_DIR/build/abi
	mkdir -p $BUILD_DIR/build/lib

	cd $BUILD_DIR/build/abi || return
	$CMAKE -DLLVM_PATH=$BUILD_DIR/llvm -DCMAKE_INSTALL_PREFIX=$install_path $BUILD_DIR/llvm/projects/libcxxabi/ || return
	make install ||return

	# xlocale.h was removed since libc6-de 2.26: https://sourceware.org/glibc/wiki/Release/2.26#Removal_of_.27xlocale.h.27
	# here touch a fake header to avoid compiling error.
	[ -f /usr/include/xlocale.h ] || touch $BUILD_DIR/llvm/projects/libcxx/include/xlocale.h

	cd $BUILD_DIR/build/lib || return
	$CMAKE -DLLVM_PATH=$BUILD_DIR/llvm -DLIBCXX_CXX_ABI=libcxxabi -DLIBCXX_CXX_ABI_INCLUDE_PATHS=$BUILD_DIR/llvm/projects/libcxxabi/include \
		-DCMAKE_INSTALL_PREFIX=$install_path -DLIBCXX_CXX_ABI_LIBRARY_PATH=$install_path/lib $BUILD_DIR/llvm/projects/libcxx || return
	make install || return
}

# The dax tests need ndctl tool to create dax device.
# See more details at https://nvdimm.wiki.kernel.org.
build_install_ndctl()
{
	cd $BUILD_DIR/ndctl || return

	./autogen.sh || return

	./configure CFLAGS='-g -O0' --disable-docs --enable-debug --prefix=/usr/local || return
	make || return
	make install || return

	# install to another directory so that we can pack them easily
	./configure CFLAGS='-g -O0' --disable-docs --enable-debug --prefix=$BUILD_DIR/valgrind_install/usr/local || return
	make || return
	make install || return
}

build()
{
	[ "$distro" = "centos" ] && sed -i 's/CXXFLAGS += -Wno-unknown-attributes/CXXFLAGS += -Wno-ignored-attributes/' ./src/benchmarks/Makefile

	build_install_valgrind_pmem || return
	build_install_libcxx || return
	build_install_libfabric || return
	build_install_ndctl || return
}

install()
{
	cp -af $source_dir/. $BM_ROOT
}

pack()
{
	cd $BUILD_DIR/valgrind_install || return
	{
		echo /lkp
		echo /lkp/benchmarks
		find /lkp/benchmarks/$BM_NAME
		find ./usr | sed 's/^.//'
		echo /usr/local/libcxx
		find /usr/local/libcxx
	} |
	cpio --quiet -o -H newc | gzip -n -9 > /lkp/benchmarks/${BM_NAME}.cgz
	[[ $arch ]] && mv "/lkp/benchmarks/${BM_NAME}.cgz" "/lkp/benchmarks/${BM_NAME}-${arch}.cgz"
}

post_cleanup()
{
	rm -rf $BUILD_DIR/valgrind_install
	rm -rf $BUILD_DIR/llvm
	rm -rf $BUILD_DIR/build
}
